[{"path":"https://knickodem.github.io/CATAcode/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://knickodem.github.io/CATAcode/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://knickodem.github.io/CATAcode/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://knickodem.github.io/CATAcode/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://knickodem.github.io/CATAcode/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://knickodem.github.io/CATAcode/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://knickodem.github.io/CATAcode/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://knickodem.github.io/CATAcode/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://knickodem.github.io/CATAcode/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://knickodem.github.io/CATAcode/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://knickodem.github.io/CATAcode/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://knickodem.github.io/CATAcode/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://knickodem.github.io/CATAcode/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://knickodem.github.io/CATAcode/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://knickodem.github.io/CATAcode/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://knickodem.github.io/CATAcode/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://knickodem.github.io/CATAcode/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://knickodem.github.io/CATAcode/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://knickodem.github.io/CATAcode/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://knickodem.github.io/CATAcode/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://knickodem.github.io/CATAcode/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://knickodem.github.io/CATAcode/articles/CATAcode-overview.html","id":"introduction-to-catacode","dir":"Articles","previous_headings":"","what":"Introduction to CATAcode","title":"CATAcode Overview","text":"Check---apply (CATA) items present numerous methodological challenges can hinder validity survey research. particular, accurately measuring, reporting, interpreting, evaluating participants’ identities essential. CATAcode R package designed assist researchers exploring CATA responses summary descriptives preparing CATA items statistical modeling. Applying tool cross-sectional longitudinal data can help enhance generalizability, transparency, reproducibility research. surveys, CATA item can also structured series forced choice dichotomous items (e.g., Yes/). instance, evaluation program graduate students asked, “experienced barriers conducting research?”, 5 options : lack funding, lack mentorship, lack research infrastructure (e.g., software), lack time capacity, barriers. survey either instruct responses CATA explicitly select Yes option. CATAcode package suitable analyzing data CATA forced choice formats. vignette demonstrates use CATAcode package : Identify participants endorse multiple categories Generate tables showing every endorsement combination data Apply various strategies merging prioritizing categories Handle cross-sectional longitudinal data","code":""},{"path":"https://knickodem.github.io/CATAcode/articles/CATAcode-overview.html","id":"the-catacode-workflow","dir":"Articles","previous_headings":"","what":"The CATAcode Workflow","title":"CATAcode Overview","text":"Import & wrangle raw wider format data longer format using cata_prep() function. Explore response combinations category counts understand complexity. Code new variables principled strategies (multiple, priority, mode). Document & export metadata, tables, optional visualizations.","code":""},{"path":"https://knickodem.github.io/CATAcode/articles/CATAcode-overview.html","id":"import-and-wrangle-data","dir":"Articles","previous_headings":"The CATAcode Workflow","what":"1. Import and Wrangle Data","title":"CATAcode Overview","text":"can install released version CATAcode CRAN : development version GitHub: installed, load package:","code":"install.packages(\"CATAcode\") devtools::install_github(\"knickodem/CATAcode\") library(CATAcode)"},{"path":"https://knickodem.github.io/CATAcode/articles/CATAcode-overview.html","id":"data-preparation","dir":"Articles","previous_headings":"The CATAcode Workflow > 1. Import and Wrangle Data","what":"Data Preparation","title":"CATAcode Overview","text":"using main cata_code() function, data must prepared. cata_prep() function helps reshape data wider longer format. Requirements dataset include: ID variable set variables (.e., columns) indicating check---apply categories examine. variables expected dichotomous (e.g., 1/0, Yes/, TRUE/FALSE) value signifying endorsement consistent across variables. longitudinal data, time variable (e.g., Wave) Example Data CATAcode package includes longitudinal dataset comprised CATA responses 7 race/ethnicity identities 6,442 students four time points. identity category/column, 1 = Selected NA = selected. load view first rows dataset: Let’s also create example cross-sectional (.e., single timepoint) data based earlier question graduate students: “experienced barriers conducting research?” category, students provide “Yes” “” response. Using cata_prep cata_prep() gateway function every workflow cata_code(). jobs : Reshape data wide tidy‑long format downstream cata_code() function can iterate one row per person‑category (person‑time‑category). Standardize column names (id, Category, Response, time) stores attributes, eliminating repetitive arguments. tell cata_prep() columns hold IDs, columns hold categories, want name two columns long format data contain categories endorsed/endorsed responses. cata_prep() function arguments: Provide name dataset. case cross cross-sectional dataset. Supply column uniquely identifies respondent. Must unique within time‑point also pass time =. ID column named something else, e.g. “participant_id”, write id = participant_id. Tell cata_prep() columns dichotomous CATA indicators. cross-sectional data, barriers; longitudinal data, race/ethnicity identities. Use tidy‑select range syntax show , grabs every column Funding Other_Barrier, inclusive, order appear data frame. List explicitly: cols = c(Black, Native_American, Asian, White, Pacific_Islander, Hispanic, Multiracial) use tidy‑select helper applicable: cols = starts_with(“race_”) cata_prep() transforms data long format needs name resulting two columns storing cateogry labels participants’ responses category, respectively. option providing names using names_to argument categories values_to argument responses. default, cata_prep() uses names “Categories” “Responses”, respectively. longitudinal data, provide column indicating time cata_prep() keeps observations different time points separate. call, new data tidy long dataframe three four standardized columns: id, Category, Response, time (supplied).","code":"data(\"sources_race\") head(sources_race) #> # A tibble: 6 × 9 #>   ID     Wave Black Native_American Asian Hispanic Multiracial Pacific_Islander #>   <chr> <dbl> <dbl>           <dbl> <dbl>    <dbl>       <dbl>            <dbl> #> 1 10002     1    NA              NA    NA        1          NA               NA #> 2 10005     1    NA              NA    NA        1          NA               NA #> 3 10006     1    NA              NA    NA        1          NA               NA #> 4 10007     1    NA              NA    NA        1          NA               NA #> 5 10009     1    NA              NA    NA        1          NA               NA #> 6 10010     1    NA              NA    NA       NA          NA               NA #> # ℹ 1 more variable: White <dbl> # Creating a cross-sectional dataset (N = 1000) set.seed(123)    n_cross = 1000  cross = data.frame(   ID               = 1:n_cross,   Funding          = sample(c(\"No\", \"Yes\"), n_cross, replace = TRUE, prob = c(.15, .85)),   Mentorship       = sample(c(\"No\", \"Yes\"), n_cross, replace = TRUE, prob = c(.10, .90)),   Infrastructure   = sample(c(\"No\", \"Yes\"), n_cross, replace = TRUE, prob = c(.45, .55)),   Time_Capacity    = sample(c(\"No\", \"Yes\"), n_cross, replace = TRUE, prob = c(.25, .75)),   Other_Barrier    = sample(c(\"No\", \"Yes\"), n_cross, replace = TRUE, prob = c(.80, .20))   )  # Display the first few rows of the dataset head(cross) #>   ID Funding Mentorship Infrastructure Time_Capacity Other_Barrier #> 1  1     Yes        Yes            Yes           Yes            No #> 2  2     Yes        Yes            Yes            No           Yes #> 3  3     Yes        Yes            Yes           Yes            No #> 4  4      No        Yes            Yes           Yes           Yes #> 5  5      No        Yes            Yes           Yes            No #> 6  6     Yes        Yes             No           Yes            No # Prepare cross-sectional  datacross_prep <- cata_prep(data = cross, id = ID, cols = Funding:Other_Barrier, names_to = \"Barriers\", values_to = \"YN\")  # Prepare longitudinal  datalong_prep <- cata_prep(data = sources_race, id = ID, cols = c(Asian, Black:White), time = Wave)  # Display the first few rows of the prepared data head(datacross_prep) #> # A tibble: 6 × 3 #>      ID Barriers       YN    #>   <int> <chr>          <chr> #> 1     1 Funding        Yes   #> 2     1 Mentorship     Yes   #> 3     1 Infrastructure Yes   #> 4     1 Time_Capacity  Yes   #> 5     1 Other_Barrier  No    #> 6     2 Funding        Yes head(datalong_prep) #> # A tibble: 6 × 4 #>   ID     Wave Category         Response #>   <chr> <dbl> <chr>               <dbl> #> 1 10002     1 Asian                  NA #> 2 10002     1 Black                  NA #> 3 10002     1 Native_American        NA #> 4 10002     1 Hispanic                1 #> 5 10002     1 Multiracial            NA #> 6 10002     1 Pacific_Islander       NA"},{"path":"https://knickodem.github.io/CATAcode/articles/CATAcode-overview.html","id":"explore-all-response-combinations","dir":"Articles","previous_headings":"The CATAcode Workflow","what":"2. Explore All Response Combinations","title":"CATAcode Overview","text":"first step analyzing CATA data exploring combinations categories present data. cata_code() function approach = \"\" helps identify every unique category combination. longitudinal data, approach = \"counts\" provides summary many times participant endorsed category across time. cata_code() function arguments: tidy‑long format dataframe returned cata_prep(). Column uniquely identifies respondent. Must match id specified cata_prep(), ID cross-sectional longitudinal datasets. column stores category labels. cross-sectional data, named column “Barriers” cata_prep(). longitudinal data, relied cata_prep() default name “Category”. column stores response codes (e.g., Yes/). cross-sectional data, named column “YN” cata_prep(). longitudinal data, relied cata_prep() default name “Response”. “” return every unique combination endorsed categories person‑wave. Useful initial scan response complexity. “counts” longitudinal data, show , returns count table many times participant endorsed category across time points. discuss options “multiple”, “priority”, “mode” moment. value resp indicating endorsement category. cross-sectional data, value “Yes”; longitudinal data, value 1. Name newly created variable approach = “”, “multiple”, “priority”, “mode”. “counts” wide participant‑level dat frame returned, new.name ignored. used approach = \"\" separate endorsed category combined single variable. Explore combinations cross-sectional data Explore endorsement counts time longitudinal data","code":"# Explore all combinations in cross-sectional data cross_all <- cata_code(data = datacross_prep,                       id = ID,                       categ = Barriers,                       resp = YN,                       approach = \"all\",                       endorse = \"Yes\",                       new.name = \"Combinations\",                       sep = \"-\")  # Display the result head(cross_all) #> # A tibble: 6 × 2 #>      ID Combinations                                          #>   <int> <chr>                                                 #> 1     1 Funding-Mentorship-Infrastructure-Time_Capacity       #> 2     2 Funding-Mentorship-Infrastructure-Other_Barrier       #> 3     3 Funding-Mentorship-Infrastructure-Time_Capacity       #> 4     4 Mentorship-Infrastructure-Time_Capacity-Other_Barrier #> 5     5 Mentorship-Infrastructure-Time_Capacity               #> 6     6 Funding-Mentorship-Time_Capacity #  # Count the frequency of each combination table(cross_all$Combinations) #>  #>                                                       Funding  #>                                                            12  #>                                        Funding-Infrastructure  #>                                                            11  #>                          Funding-Infrastructure-Other_Barrier  #>                                                             1  #>                          Funding-Infrastructure-Time_Capacity  #>                                                            18  #>            Funding-Infrastructure-Time_Capacity-Other_Barrier  #>                                                             5  #>                                            Funding-Mentorship  #>                                                            72  #>                             Funding-Mentorship-Infrastructure  #>                                                            97  #>               Funding-Mentorship-Infrastructure-Other_Barrier  #>                                                            27  #>               Funding-Mentorship-Infrastructure-Time_Capacity  #>                                                           259  #> Funding-Mentorship-Infrastructure-Time_Capacity-Other_Barrier  #>                                                            57  #>                              Funding-Mentorship-Other_Barrier  #>                                                             7  #>                              Funding-Mentorship-Time_Capacity  #>                                                           213  #>                Funding-Mentorship-Time_Capacity-Other_Barrier  #>                                                            51  #>                                         Funding-Other_Barrier  #>                                                             1  #>                                         Funding-Time_Capacity  #>                                                            20  #>                           Funding-Time_Capacity-Other_Barrier  #>                                                             2  #>                                                Infrastructure  #>                                                             3  #>                                  Infrastructure-Other_Barrier  #>                                                             1  #>                                  Infrastructure-Time_Capacity  #>                                                             5  #>                                                    Mentorship  #>                                                            12  #>                                     Mentorship-Infrastructure  #>                                                            13  #>                       Mentorship-Infrastructure-Other_Barrier  #>                                                             5  #>                       Mentorship-Infrastructure-Time_Capacity  #>                                                            34  #>         Mentorship-Infrastructure-Time_Capacity-Other_Barrier  #>                                                             6  #>                                      Mentorship-Time_Capacity  #>                                                            53  #>                        Mentorship-Time_Capacity-Other_Barrier  #>                                                             9  #>                                                 Time_Capacity  #>                                                             4  #>                                   Time_Capacity-Other_Barrier  #>                                                             1 # Explore all combinations in cross-sectional data # Get counts across waves long_counts <- cata_code(data = datalong_prep,                          id = ID,                          categ = Category,                          resp = Response,                          approach = \"counts\",                          endorse = 1)  # Display the result head(long_counts) #> # A tibble: 6 × 3 #> # Groups:   ID [5] #>   ID     Category        n_time #>   <chr>  <chr>            <int> #> 1 100003 White                4 #> 2 100006 White                1 #> 3 100009 Asian                1 #> 4 100010 White                2 #> 5 100011 Native_American      2 #> 6 100011 White                1"},{"path":"https://knickodem.github.io/CATAcode/articles/CATAcode-overview.html","id":"coding-a-new-variable-for-statistical-analysis","dir":"Articles","previous_headings":"The CATAcode Workflow","what":"3. Coding A New Variable for Statistical Analysis","title":"CATAcode Overview","text":"CATAcode offers several approaches cata_code() function prepare CATA data statistical modeling: “multiple” - combine anyone endorsing ≥ 2 categories single catch‑group (e.g., “Multiracial”). “priority” - assign participant first category user‑supplied priority list endorsed. “mode” - longitudinal ; assign category endorsed often across waves (ties handled like “multiple” decided priority supplied). “multiple” Approach “multiple” approach automatically combines individuals reported two categories group. new argument name new category: call catch‑group people checked 2+ boxes. “priority” Approach example vast majority students selected two categories combined Multiple category. Although informs graduate program students experience multiple barriers conducting research, provides little information actionable changes. contrast, “priority” approach allows us prioritize specific categories interest. instance, graduate program might particular interest improving mentorship graduate researchers investing research infrastructure. new argument list priority categories: Vector category labels descending priority order. participant assigned first category list endorsed. endorsed none priority categories, fall back single selection (multi.name endorsed > 1 non‑priority category). “mode” Approach Longitudinal Data “mode” approach designed longitudinal data, placing individuals category endorsed often across time points. new argument list name wave: Column identifying measurement occasion. Combining “mode” “priority” Approaches Longitudinal Data","code":"# Apply the \"multiple\" approach cross_multiple <- cata_code(data = datacross_prep,                             id = ID,                             categ = Barriers,                             resp = YN,                             approach = \"multiple\",                             endorse = \"Yes\",                             new.name = \"Barrier\",                             multi.name = \"Multiple\")  # Display the results table(cross_multiple$Barrier) #>  #>        Funding Infrastructure     Mentorship       Multiple  Time_Capacity  #>             12              3             12            968              4 # Apply the \"priority\" approach cross_priority <- cata_code(data = datacross_prep,                             id = ID,                             categ = Barriers,                             resp = YN,                             approach = \"priority\",                             endorse = \"Yes\",                             new.name = \"Barrier\",                             multi.name = \"Multiple\",                             priority = c(\"Mentorship\", \"Infrastructure\"))  # Display the results table(cross_priority$Barrier) #>  #>        Funding Infrastructure     Mentorship       Multiple  Time_Capacity  #>             12             44            915             24              4 # Apply the \"mode\" approach long_mode <- cata_code(data = datalong_prep,                        id = ID,                        categ = Category,                        resp = Response,                        approach = \"mode\",                        endorse = 1,                        time = Wave,                        new.name = \"Race_Ethnicity\",                        multi.name = \"Multiracial\")  # Display the results table(long_mode$Race_Ethnicity) #>  #>            Asian            Black         Hispanic      Multiracial  #>              152              110             2882              777  #>  Native_American Pacific_Islander            White  #>               65               22             2434 # Combining \"mode\" with \"priority\" long_mode_priority <- cata_code(data = datalong_prep,                                 id = ID,                                 categ = Category,                                 resp = Response,                                 approach = \"mode\",                                 endorse = 1,                                 time = Wave,                                 new.name = \"Race_Ethnicity\",                                 multi.name = \"Multiracial\",                                 priority = c(\"Black\", \"Native_American\"))  # Display the results table(long_mode_priority$Race_Ethnicity) #>  #>            Asian            Black         Hispanic      Multiracial  #>              146              459             2732              423  #>  Native_American Pacific_Islander            White  #>              347               22             2313"},{"path":"https://knickodem.github.io/CATAcode/articles/CATAcode-overview.html","id":"document-export-metadata-tables-and-optional-visualizations-","dir":"Articles","previous_headings":"The CATAcode Workflow","what":"4. Document & Export metadata, tables, and optional visualizations.","title":"CATAcode Overview","text":"addition comparing frequency tables table() function, visualizing distribution categories can help researchers make informed decisions coding strategies. next version CATAcode include expanded functionality creating publication ready tables figures. Let’s compare response frequencies change multiple approach prioritizing mentorship infrastructure cross-sectional data.  can also compare mode approach mode priority approach longitudinal data.","code":"library(ggplot2)  # Get counts from the coded data frames created earlier counts_multiple = cross_multiple |>   count(Barrier, name = \"Count\") |>   mutate(Approach = \"Multiple\")  counts_priority = cross_priority |>   count(Barrier, name = \"Count\") |>   mutate(Approach = \"Priority\")  # Display in a figure cross_plot = bind_rows(counts_multiple, counts_priority) |>   ggplot(aes(x = reorder(Barrier, -Count), y = Count,              fill = Approach)) +   geom_col(position = \"dodge\") +   scale_fill_manual(values = c(Multiple = \"#1F78B4\",                                Priority  = \"#FB9A99\")) +   labs(x = \"Barrier\", y = \"Count\",        title = \"Comparing Coding Approaches\") +   theme_minimal(base_size = 11) +   theme(axis.text.x = element_text(angle = 45, hjust = 1),         legend.position = \"top\") cross_plot library(ggplot2)  # Get counts from the coded data frames created earlier counts_mode = long_mode|>   count(Race_Ethnicity, name = \"Count\") |>   mutate(Approach = \"Mode\")  counts_mwp = long_mode_priority |>   count(Race_Ethnicity, name = \"Count\") |>   mutate(Approach = \"Mode with Priority\")  # Display in a figure long_plot = bind_rows(counts_mode, counts_mwp) |>   ggplot(aes(x = reorder(Race_Ethnicity, -Count), y = Count,              fill = Approach)) +   geom_col(position = \"dodge\") +   scale_fill_manual(values = c(Mode = \"#1F78B4\",                                `Mode with Priority`  = \"#FB9A99\")) +   labs(x = \"Race/Ethnicity\", y = \"Count\",        title = \"Comparing Coding Approaches\") +   theme_minimal(base_size = 11) +   theme(axis.text.x = element_text(angle = 45, hjust = 1),         legend.position = \"top\") long_plot"},{"path":"https://knickodem.github.io/CATAcode/articles/CATAcode-overview.html","id":"recommendations-for-using-catacode","dir":"Articles","previous_headings":"","what":"Recommendations for Using CATAcode","title":"CATAcode Overview","text":"Start exploring combinations using \"\" \"counts\" approaches. Retain much identity nuance possible sample size allows. Document justify subjective decisions merging prioritizing categories. Include supplemental tables category combinations describe complete demographic picture. Choose coding approaches based research questions sample characteristics.","code":""},{"path":[]},{"path":"https://knickodem.github.io/CATAcode/articles/CATAcode-overview.html","id":"conclusion","dir":"Articles","previous_headings":"Recommendations for Using CATAcode","what":"Conclusion","title":"CATAcode Overview","text":"CATAcode provides structured approach handling CATA survey items transparent principled manner. enhancing precision inclusivity data, package supports robust health social science research better reflects lived experiences health needs diverse communities. additional information, see package documentation typing ?CATAcode::cata_prep ?CATAcode::cata_code R console.","code":""},{"path":"https://knickodem.github.io/CATAcode/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kyle Nickodem. Author, maintainer. Gabriel J. Merrin. Author.","code":""},{"path":"https://knickodem.github.io/CATAcode/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nickodem K, Merrin G (2025). CATAcode: Explore Code Responses Check---Apply Survey Items. R package version 1.0.0, https://github.com/knickodem/CATAcode.","code":"@Manual{,   title = {CATAcode: Explore and Code Responses to Check-All-that-Apply Survey Items},   author = {Kyle Nickodem and Gabriel J. Merrin},   year = {2025},   note = {R package version 1.0.0},   url = {https://github.com/knickodem/CATAcode}, }"},{"path":"https://knickodem.github.io/CATAcode/index.html","id":"catacode-","dir":"","previous_headings":"","what":"Explore and Code Responses to Check-All-that-Apply Survey Items","title":"Explore and Code Responses to Check-All-that-Apply Survey Items","text":"Principled Approaches Coding Check---Apply Responses  “following happened ? Check apply.” Felt overwhelmed huge number response combinations Unsure use combinations analysis (e.g., regression) lump multiple small categories uninterpretable “” category Worried misrepresenting participants’ responses Check---apply (CATA) survey items – alternatively formatted set forced choice yes/items – present numerous methodological challenges summarizing responses appropriately representing complex responses subsequent analyses. Nonetheless, accurately measuring, reporting, interpreting, evaluating responses, particularly regarding participant identity (e.g., race/ethnicity, health conditions), essential social science, health science, consumer research. CATAcode provides structured, transparent, reproducible workflows handling challenges posed CATA responses. package specifically designed assist researchers exploring CATA responses summary descriptives preparing CATA items statistical modeling. Applying tool cross-sectional longitudinal data can help enhance generalizability, transparency, reproducibility research. Key Features Explore response combinations CATA items understand complexity participant responses Handle cross-sectional longitudinal data specialized functions context Multiple coding approaches choose (e.g., multiple, priority, mode) Transparent documentation subjective coding decisions can install released version CATAcode CRAN : development version GitHub: installed, load package: use CATAcode understand participant demographics? Traditional approaches CATA demographic items often: Collapse participants multiple identities heterogeneous “” categories Ignore participants select multiple identities Lack transparency coding decisions Fail capture identity fluidity time CATAcode addresses issues : Providing structured exploration identity combinations Offering principled approaches category assignment Encouraging transparent documentation subjective decisions Supporting cross-sectional longitudinal analyses","code":"install.packages(\"CATAcode\") devtools::install_github(\"knickodem/CATAcode\") library(CATAcode)"},{"path":"https://knickodem.github.io/CATAcode/reference/CATAcode.html","id":null,"dir":"Reference","previous_headings":"","what":"CATAcode: Explore and Code Responses to Check-All-that-Apply Survey Items — CATAcode","title":"CATAcode: Explore and Code Responses to Check-All-that-Apply Survey Items — CATAcode","text":"Analyzing responses check---apply survey items often requires data transformations subjective decisions combining categories. CATAcode contains tools exploring response patterns, facilitating data transformations, applying set decision rules coding responses, summarizing response frequencies.","code":""},{"path":[]},{"path":"https://knickodem.github.io/CATAcode/reference/CATAcode.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CATAcode: Explore and Code Responses to Check-All-that-Apply Survey Items — CATAcode","text":"Maintainer: Kyle Nickodem kyle.nickodem@gmail.com (ORCID) Authors: Gabriel J. Merrin gjmerrin@syr.edu","code":""},{"path":"https://knickodem.github.io/CATAcode/reference/cata_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Code check-all-that-apply responses into a single variable — cata_code","title":"Code check-all-that-apply responses into a single variable — cata_code","text":"cross-sectional longitudinal context, select set decision rules combine responses multiple categories check---apply survey question single variable.","code":""},{"path":"https://knickodem.github.io/CATAcode/reference/cata_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code check-all-that-apply responses into a single variable — cata_code","text":"","code":"cata_code(   data,   id,   categ,   resp,   approach,   endorse = 1,   time = NULL,   priority = NULL,   new.name = \"Variable\",   multi.name = \"Multiple\",   sep = \"-\" )"},{"path":"https://knickodem.github.io/CATAcode/reference/cata_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Code check-all-that-apply responses into a single variable — cata_code","text":"data data frame one row id (time, specified) category combination. data currently \"wide\" format response category column, use cata_prep() first transform datainto proper format. See Examples. id column data uniquely identify participant. categ Unquoted column data indicating check--apply category labels. resp Unquoted column data indicating check--apply responses. approach One \"\", \"counts\", \"multiple\", \"priority\", \"mode\". See Details. endorse value resp indicating endorsement category categ. must categories. Common values 1 (default), \"yes\", TRUE, 2 (SPSS data). time column data time variable; used reshape longitudinal data multiple observations id. priority Character vector one categories categ column indicating order prioritize response categories approach \"priority\" \"mode\". new.name Character; column name created variable. multi.name Character; value given participants multiple category endorsements approach %% c(\"multiple\", \"priority\", \"mode\"). sep Character; separator use values approach = \"\".","code":""},{"path":"https://knickodem.github.io/CATAcode/reference/cata_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Code check-all-that-apply responses into a single variable — cata_code","text":"data.frame","code":""},{"path":"https://knickodem.github.io/CATAcode/reference/cata_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Code check-all-that-apply responses into a single variable — cata_code","text":"approach options, participants missing data categories categ removed present output. two options approach provide summary information rather single code id. \"\" returns data frame new.name variable comprised categories endorsed separated sep. time argument ignored approach = \"\". Rather, data includes column time, output includes row id time point. approach useful exploratory first step identifying response patterns present data. \"counts\" relevant longitudinal data returns data frame number times id endorsed category. categories >= 1 endorsement included particular id. \"\", time argument ignored instead assumes data longer format row id time combination. , column counts 1 rows. three remaining options approach produce single code id. output data frame one row id. choice approach relevant participants selected one category whereas participants selected one category given code output regardless approach chosen. \"multiple\" participant endorsed multiple categories within across time, code multi.name. \"priority\" \"multiple\" unless participant endorsed category priority argument point. , code order specified priority. \"mode\" Participant coded category mode (.e., common) endorsement across time points. Ties coded value given multi.name. priority argument specified, categories prioritized first, followed mode response. \"mode\" approach relevant time specified. time = NULL operates \"priority\" (specified) \"multiple\".","code":""},{"path":"https://knickodem.github.io/CATAcode/reference/cata_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Code check-all-that-apply responses into a single variable — cata_code","text":"","code":"# prepare data data(sources_race) sources_long <- cata_prep(data = sources_race, id = ID, cols = Black:White, time = Wave)    # Identify all unique response patterns all <- cata_code(sources_long, id = ID, categ = Category, resp = Response, approach = \"all\", time = Wave, new.name = \"Race_Ethnicity\") unique(all$Race_Ethnicity) #>  [1] \"Hispanic\"                                                                #>  [2] \"Hispanic-White\"                                                          #>  [3] \"White\"                                                                   #>  [4] \"Native_American-White\"                                                   #>  [5] \"Multiracial\"                                                             #>  [6] \"Black-Native_American\"                                                   #>  [7] \"Hispanic-Multiracial\"                                                    #>  [8] \"Native_American-Hispanic\"                                                #>  [9] \"Black-White\"                                                             #> [10] \"Native_American-Hispanic-White\"                                          #> [11] \"Black-Native_American-Asian-Hispanic-Pacific_Islander\"                   #> [12] \"Black\"                                                                   #> [13] \"Native_American\"                                                         #> [14] \"Asian\"                                                                   #> [15] \"Multiracial-White\"                                                       #> [16] \"Black-Native_American-Asian-Hispanic\"                                    #> [17] \"Black-Hispanic-White\"                                                    #> [18] \"Black-Hispanic\"                                                          #> [19] \"Black-Hispanic-Multiracial-White\"                                        #> [20] \"Black-Multiracial\"                                                       #> [21] \"Black-Native_American-Hispanic-Multiracial\"                              #> [22] \"Black-Asian-White\"                                                       #> [23] \"Black-Native_American-Asian-Hispanic-Multiracial-Pacific_Islander-White\" #> [24] \"Black-Native_American-Hispanic-Multiracial-White\"                        #> [25] \"Black-Hispanic-Multiracial\"                                              #> [26] \"Native_American-Multiracial\"                                             #> [27] \"Black-Pacific_Islander-White\"                                            #> [28] \"Native_American-Pacific_Islander-White\"                                  #> [29] \"Native_American-Multiracial-White\"                                       #> [30] \"Hispanic-Pacific_Islander\"                                               #> [31] \"Asian-White\"                                                             #> [32] \"Hispanic-Multiracial-White\"                                              #> [33] \"Native_American-Hispanic-Multiracial-White\"                              #> [34] \"Black-Asian-Hispanic\"                                                    #> [35] \"Asian-Multiracial-White\"                                                 #> [36] \"Pacific_Islander-White\"                                                  #> [37] \"Asian-Hispanic\"                                                          #> [38] \"Black-Asian-Multiracial\"                                                 #> [39] \"Pacific_Islander\"                                                        #> [40] \"Multiracial-Pacific_Islander\"                                            #> [41] \"Black-Asian-Hispanic-White\"                                              #> [42] \"Black-Multiracial-White\"                                                 #> [43] \"Black-Native_American-Hispanic-White\"                                    #> [44] \"Asian-Hispanic-White\"                                                    #> [45] \"Asian-Pacific_Islander-White\"                                            #> [46] \"Black-Native_American-Hispanic\"                                          #> [47] \"Native_American-Hispanic-Multiracial\"                                    #> [48] \"Black-Native_American-Asian-Multiracial\"                                 #> [49] \"Black-Pacific_Islander\"                                                  #> [50] \"Hispanic-Pacific_Islander-White\"                                         #> [51] \"Native_American-Asian-Hispanic-Multiracial-Pacific_Islander-White\"       #> [52] \"Black-Asian\"                                                             #> [53] \"Black-Asian-Hispanic-Multiracial\"                                        #> [54] \"Asian-Hispanic-Multiracial\"                                              #> [55] \"Native_American-Asian-White\"                                             #> [56] \"Multiracial-Pacific_Islander-White\"                                      #> [57] \"Native_American-Asian\"                                                   #> [58] \"Black-Native_American-White\"                                             #> [59] \"Black-Native_American-Asian-Hispanic-Pacific_Islander-White\"             #> [60] \"Asian-Multiracial\"                                                       #> [61] \"Black-Native_American-Asian-Hispanic-Multiracial\"                        #> [62] \"Asian-Pacific_Islander\"                                                  #> [63] \"Asian-Hispanic-Pacific_Islander\"                                         #> [64] \"Black-Hispanic-Pacific_Islander-White\"                                   #> [65] \"Asian-Multiracial-Pacific_Islander-White\"                                #> [66] \"Black-Native_American-Asian-Hispanic-Multiracial-Pacific_Islander\"       #> [67] \"Native_American-Hispanic-Pacific_Islander-White\"                         #> [68] \"Native_American-Asian-Hispanic\"                                          #> [69] \"Black-Native_American-Hispanic-Pacific_Islander\"                         #> [70] \"Black-Asian-Hispanic-Multiracial-White\"                                  #> [71] \"Black-Native_American-Pacific_Islander-White\"                            #> [72] \"Native_American-Asian-Multiracial-White\"                                 #> [73] \"Black-Native_American-Multiracial-White\"                                 #> [74] \"Asian-Hispanic-Multiracial-Pacific_Islander-White\"                       #> [75] \"Asian-Hispanic-Multiracial-White\"                                        #> [76] \"Black-Asian-Hispanic-Multiracial-Pacific_Islander-White\"                 #> [77] \"Black-Native_American-Asian-Hispanic-Multiracial-White\"                  #> [78] \"Asian-Hispanic-Pacific_Islander-White\"                                   #> [79] \"Black-Native_American-Asian\"                                             #> [80] \"Black-Hispanic-Pacific_Islander\"                                         #> [81] \"Native_American-Asian-Hispanic-White\"                                    #> [82] \"Black-Asian-Hispanic-Pacific_Islander-White\"                             #> [83] \"Black-Native_American-Hispanic-Multiracial-Pacific_Islander-White\"       #> [84] \"Black-Native_American-Multiracial\"                                       #> [85] \"Native_American-Hispanic-Pacific_Islander\"                               #> [86] \"Native_American-Asian-Multiracial\"                                       #> [87] \"Black-Native_American-Multiracial-Pacific_Islander-White\"                #> [88] \"Native_American-Asian-Hispanic-Multiracial-White\"                         # \\donttest{   # Coding endorsement of multiple categories as \"Multiple multiple <- cata_code(sources_long, id = ID, categ = Category, resp = Response, approach = \"multiple\", time = Wave, new.name = \"Race_Ethnicity\")  # Prioritizing \"Native_American\" and \"Pacific_Islander\" endorsements # If participant endorsed both, they are coded as \"Native_American\" because it is listed first # in the priority argument. priority <- cata_code(sources_long, id = ID, categ = Category, resp = Response, approach = \"priority\", time = Wave, new.name = \"Race_Ethnicity\", priority = c(\"Native_American\", \"Pacific_Islander\"))  # Code as category with the most endorsements. In the case of ties, code as \"Multiple\" mode <- cata_code(sources_long, id = ID, categ = Category, resp = Response, approach = \"mode\", time = Wave, new.name = \"Race_Ethnicity\")  # Compare frequencies across coding schemes table(multiple$Race_Ethnicity) #>  #>            Asian            Black         Hispanic         Multiple  #>              128               70             2455             1518  #>      Multiracial  Native_American Pacific_Islander            White  #>               55               35               14             2167  table(priority$Race_Ethnicity) #>  #>            Asian            Black         Hispanic         Multiple  #>              128               70             2455             1034  #>      Multiracial  Native_American Pacific_Islander            White  #>               55              445               88             2167  table(mode$Race_Ethnicity) #>  #>            Asian            Black         Hispanic         Multiple  #>              152              110             2882              665  #>      Multiracial  Native_American Pacific_Islander            White  #>              112               65               22             2434  # }"},{"path":"https://knickodem.github.io/CATAcode/reference/cata_prep.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data for cata_code() — cata_prep","title":"Prepare data for cata_code() — cata_prep","text":"helper function transform data longer format preparation use cata_code().","code":""},{"path":"https://knickodem.github.io/CATAcode/reference/cata_prep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data for cata_code() — cata_prep","text":"","code":"cata_prep(   data,   id,   cols,   time = NULL,   names_to = \"Category\",   values_to = \"Response\",   ... )"},{"path":"https://knickodem.github.io/CATAcode/reference/cata_prep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data for cata_code() — cata_prep","text":"data data frame rows participants participant time combinations time specified. id column data uniquely identify participant. cols <tidy-select> columns data indicating check---apply categories combine. Endorsement category indicated value (e.g., 1, \"Yes\") across columns included . Columns typically dichotomous variables two values indicating endorsement , requirement. time column data time variable; used reshape longitudinal data multiple observations id. names_to Character. name new column category labels (.e., names cols columns), passed pivot_longer(). values_to Character. name new column responses (.e., cell values cols columns), passed pivot_longer(). ... Optional additional arguments passed pivot_longer().","code":""},{"path":"https://knickodem.github.io/CATAcode/reference/cata_prep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare data for cata_code() — cata_prep","text":"object type data one row id (time, specified) response category combination.","code":""},{"path":"https://knickodem.github.io/CATAcode/reference/cata_prep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare data for cata_code() — cata_prep","text":"","code":"data(sources_race) cata_prep(data = sources_race, id = ID, cols = Black:White, time = Wave)"},{"path":"https://knickodem.github.io/CATAcode/reference/sources_race.html","id":null,"dir":"Reference","previous_headings":"","what":"Sources of Strength Race/Ethnicity Data — sources_race","title":"Sources of Strength Race/Ethnicity Data — sources_race","text":"Responses check---apply race/ethnicity question four time points randomized controlled trial Sources Strength program.","code":""},{"path":"https://knickodem.github.io/CATAcode/reference/sources_race.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sources of Strength Race/Ethnicity Data — sources_race","text":"","code":"sources_race"},{"path":"https://knickodem.github.io/CATAcode/reference/sources_race.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sources of Strength Race/Ethnicity Data — sources_race","text":"data frame 16,922 rows 9 columns: ID Subject identification number Wave Data collection time point Black, Native_American, Asian, Hispanic, Multiracial, Pacific_Islander, White Indicator variables check---apply responses 1 = endorsement","code":""},{"path":"https://knickodem.github.io/CATAcode/reference/sources_race.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sources of Strength Race/Ethnicity Data — sources_race","text":"doi:10.15139/S3/EZ8ILC","code":""},{"path":"https://knickodem.github.io/CATAcode/news/index.html","id":"catacode-100","dir":"Changelog","previous_headings":"","what":"CATAcode 1.0.0","title":"CATAcode 1.0.0","text":"CRAN release: 2025-08-26 Initial CRAN submission.","code":""}]
